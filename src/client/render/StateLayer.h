// Generated by dia2code
#ifndef RENDER__STATELAYER__H
#define RENDER__STATELAYER__H

#include <vector>
#include <memory>

namespace state {
  class State;
};
namespace render {
  class TileSet;
  class Layer;
}

#include "state/State.h"
#include "TileSet.h"
#include "Layer.h"

namespace render {

  /// class StateLayer - 
  class StateLayer {
    // Associations
    // Attributes
  private:
    state::State stateLayer;
  protected:
    std::vector<std::unique_ptr<TileSet>> tilesets;
    std::vector<std::unique_ptr<Layer>> layers;
    // Operations
  public:
    StateLayer (state::State etat);
    std::vector<std::unique_ptr<TileSet>>& getTilesets ();
    std::vector<std::unique_ptr<Layer>>& getLayers ();
    void initLayers ();
    // Setters and Getters
    void setTilesets(const std::vector<std::unique_ptr<TileSet>>& tilesets);
    void setLayers(const std::vector<std::unique_ptr<Layer>>& layers);
  };

};

#endif
