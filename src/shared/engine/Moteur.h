// Generated by dia2code
#ifndef ENGINE__MOTEUR__H
#define ENGINE__MOTEUR__H

#include <map>
#include <memory>
#include <SFML/Graphics.hpp>

namespace state {
  class State;
};
namespace engine {
  class Commande;
};
namespace sf {
  class RenderWindow;
}

#include "state/State.h"
#include "Commande.h"

namespace engine {

  /// class Moteur - 
  class Moteur {
    // Associations
    // Attributes
  private:
    state::State etatActuel;
    std::map<int, std::unique_ptr<Commande>> commandesActuelles;
    bool changementTour;
    bool joueurActif;
    // Operations
  public:
    Moteur ();
    ~Moteur ();
    state::State& getEtat ();
    void addCommandePassive ();
    void addCommande (int priorite, std::unique_ptr<Commande> ptr_cmd);
    void update (sf::RenderWindow& window);
    bool verificationFinDeTour ();
    void verificationDebutDeTour ();
    // Setters and Getters
  };

};

#endif
