// Generated by dia2code
#ifndef STATE__STATE__H
#define STATE__STATE__H

#include <vector>
#include <string>

namespace state {
  class Player;
  class Cursor;
  class Observable;
}

#include "Observable.h"
#include "Cursor.h"
#include "Player.h"
#include "FieldStatusId.h"
#include "FieldTypeId.h"

namespace state {

  /// class State - 
  class State : public state::Observable {
    // Associations
    FieldStatusId fieldStatusId;
    state::FieldTypeId fieldTypeId;
    // Attributes
  private:
    std::vector<std::vector<std::pair<FieldTypeId, std::pair<FieldStatusId,int>>>> grid;
    std::vector<Player*> players;
    int round;
    Cursor* cursor;
    // Operations
  public:
    std::vector<std::vector<std::pair<FieldTypeId, std::pair<FieldStatusId,int>>>>& getGrid ();
    std::vector<Player*> getPlayers ();
    int getRound ();
    void setRound (int newRound);
    bool initGrid (std::string maptxt);
    void initPlayers (int nbPlayers);
    void initCursor ();
    Cursor* getCursor ();
    // Setters and Getters
    FieldStatusId getFieldStatusId() const;
    void setFieldStatusId(FieldStatusId fieldStatusId);
    FieldTypeId getFieldTypeId() const;
    void setFieldTypeId(FieldTypeId fieldTypeId);
  };

};

#endif
