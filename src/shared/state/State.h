// Generated by dia2code
#ifndef STATE__STATE__H
#define STATE__STATE__H

#include <vector>
#include <string>

namespace state {
  class Player;
  class Cursor;
  class Observable;
  class Field;
}

#include "Observable.h"
#include "Field.h"
#include "Cursor.h"
#include "Player.h"

namespace state {

  /// class State - 
  class State : public state::Observable {
    // Associations
    // Attributes
  private:
    std::vector<std::vector<Field*>> grid;
    std::vector<Player*> players;
    int round;
    Cursor* cursor;
    Player* playing;
    // Operations
  public:
    std::vector<std::vector<Field*>>& getGrid ();
    std::vector<Player*> getPlayers ();
    int getRound ();
    void setRound (int newRound);
    bool initGrid (std::string maptxt);
    void initPlayers (int nbPlayers);
    void initCursor ();
    Cursor* getCursor ();
    Player* getPlaying ();
    void setPlaying (Player* newPlaying);
    // Setters and Getters
  };

};

#endif
