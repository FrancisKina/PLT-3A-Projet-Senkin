// Generated by dia2code
#ifndef STATE__SKILL__H
#define STATE__SKILL__H

#include <vector>

namespace state {
  class SkillFactory;
}

#include "EffectId.h"
#include "SkillFactory.h"

namespace state {

  /// class Skill - 
  class Skill {
    // Associations
    // Attributes
  private:
    int damage;
    int range;
    std::vector<std::pair<int,int>> area;
    int precision;
    std::vector<std::tuple<EffectId,int,int>> effect;
    int cooldown;
    bool special;
    // Operations
  public:
    int getDamage ();
    int getRange ();
    std::vector<std::pair<int,int>> getArea ();
    std::vector<std::tuple<EffectId,int,int>> getEffect ();
    int getCooldown ();
    bool getSpecial ();
    int getPrecision ();
    void setDamage (int newDamage);
    void setRange (int newRange);
    void setArea (std::vector<std::pair<int,int>> newArea);
    void setEffect (std::vector<std::tuple<EffectId,int,int>> newEffect);
    void setCooldown (int newCD);
    void setSpecial (bool isSpecial);
    void setPrecision (int newPrecision);
    // Setters and Getters
  };

};

#endif
